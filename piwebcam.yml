# Create a webcam on a raspberry pi
- name: "Raspberry Pi Webcam"
  hosts: all
  become: true
  vars:
    disable_gui_boot: true
    webcam:
      name: window
      path: "/webcam/"
      startup_script_path: "/usr/local/bin/"
      encoding:
        bitrate: 2000000
        # Refer to the table on this page to select the right resolution for the
        # FoV you want:
        # https://www.raspberrypi.org/documentation/raspbian/applications/camera.md
        # For example, i'm using the HQ camera at 1024x760 to get the widest view
        # possible
        width: 1920
        height: 1080
        # Interval between I-Frames (https://www.webopedia.com/definitions/i-frame/)
        gop: 50
      stream:
        # Number of segments in the m3u8 file
        playlist_length: 30
        # Length of each segment in seconds
        segment_length: 2
  
  tasks:
    # Check if GUI booting is enabled
    - name: Check if boot to GUI is enabled
      command: systemctl get-default
      register: gui_check_out
      when: disable_gui_boot

    # Disable boot to GUI, and shut down GUI
    - name: Disable boot to GUI
      command: "{{ item }}"
      with_items:
        - systemctl set-default multi-user.target
        - systemctl default
      when: ('graphical.target' in gui_check_out.stdout) and disable_gui_boot

    # Install (or make sure) required tools are installed
    - name: Install nginx and ffmpeg
      apt:
        name: 
          - nginx
          - ffmpeg
        state: latest
        update_cache: yes
    
    - name: Install Raspivid
      apt:
        name: libraspberrypi-bin
        state: latest
      when: vagrant_install is not defined

    - name: Check if camera is enabled
      command: raspi-config nonint get_camera
      register: raspi_config_out

    - name: Enable pi Camera
      command: raspi-config nonint do_camera 0
      when: (vagrant_install is not defined) and (raspi_config_out.stdout == "1")

    - name: Create hls stream directory
      file:
        path: "{{ webcam.path }}"
        state: directory
        mode: "0755"
    
    - name: Create index.html
      template:
        src: index.html.j2
        dest: "{{ webcam.path }}/index.html"
        mode: "0644"
    
    - name: Change ownership of files
      file:
        path: "{{ webcam.path }}"
        state: directory
        recurse: yes
        owner: pi
        group: pi
    
    - name: Create webcam startup script
      template:
        src: webcam.sh.j2
        dest: "{{ webcam.startup_script_path }}/webcam.sh"
        mode: "0755"
      notify: 
        - Restart webcam service

    - name: Configure nginx
      template:
        src: nginx.conf.j2
        dest: "/etc/nginx/nginx.conf"
        mode: "0644"
      notify: 
        - Restart nginx

    - name: Create webcam service
      template:
        src: webcam.service.j2
        dest: "/etc/systemd/system/webcam.service"
        mode: "0644"
    
  handlers:
    - name: Restart webcam service
      systemd:
        state: restarted
        daemon-reload: yes
        enabled: yes
        name: webcam
    
    - name: Restart nginx
      systemd:
        state: restarted
        daemon-reload: yes
        enabled: yes
        name: nginx